<?php

namespace TestAnalysis;

class Config {
    const site = "Droitwich Spa High School & Sixth Form Centre Test Analysis Service";
    const site_docroot = "/home/crees/public_html/roombooking/test-analysis";
    const site_url = "https://www.bayofrum.net/~crees/roombooking/test-analysis";
    const site_emaildomain = "droitwichspahigh.worcs.sch.uk";
    const site_supportemail = "reescm@droitwichspahigh.worcs.sch.uk";
    const site_small_logo = "dshs.jpg"; // Path relative to site_url/img/
    
    const student_instruction_video = 'https://youtu.be/Hm42t_5_ijs';
    
    const use_sessions = false;
    
    const db = array(
        'host' => "localhost:3306",
        'user' => "root",
        'password' => "",
        'name' => "testAnalysis",
    );
    
    const arbor = array(
        'site' => "https://api-sandbox2.uk.arbor.sc/",
        'user' => "",
        'password' => "",
    );
    
    const academic_year = '2019-2020';
    
    const max_targets = 12;
    
    const forced_admin_users = array('reescm');
    
    public static $maintenance = true;
    
    const debug = true;
    
    // The site won't work until you make a backup key, used with /dev/backup.php
    // https://codepen.io/corenominal/pen/rxOmMJ
    // ^^^ Use this site to generate a key, and put it between the quotes on the following line.
    const backups_key = '';
    
    
    // It is beyond a nightmare to get Imagick to play with Ghostscript on IIS.
    // Let's save ourselves the headache and just use it directly-- please say where it is
    //const windows_path_to_gs_exe = '"C:\\Program Files\\gs\\gs9.53.3\\bin\\gswin64c.exe"';
    
    /**
     * Regular expression for matching student logins.
     * 
     * At DSHS, all student logins begin with two digits and then
     * alphabetical characters.
     * 
     * Be absolutely certain that this will catch all students, otherwise
     * they will have access elsewhere.
     */
    private static $user_regexes = array(
        'student' => '^[0-9]{2}[-a-zA-Z]+$',
        'staff'   => '^[-a-zA-Z]+$',
    );
    
    /* No user serviceable parts beyond this point */
    
    static function debug($msg) {
        if (defined ("self::debug") && self::debug) {
            echo "<br />" . substr(round(microtime(true) * 1000), 6) . " $msg\n";
        }
    }
    
    static protected function check_regex($name, $type) {
        return preg_match('/^' . self::$user_regexes[$type] . '/', $name);
    }
    
    static function is_student($name) {
        return self::check_regex($name, 'student');
    }
    
    static function is_staff($name) {
        return self::check_regex($name, 'staff');
    }
    
    static function is_forced_admin($name) {
        return in_array($name, self::forced_admin_users);
    }
}